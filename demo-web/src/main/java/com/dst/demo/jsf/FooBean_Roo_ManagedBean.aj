// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dst.demo.jsf;

import com.dst.demo.foo.Foo;
import com.dst.demo.jsf.FooBean;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect FooBean_Roo_ManagedBean {
    
    declare @type: FooBean: @ManagedBean(name = "fooBean");
    
    declare @type: FooBean: @SessionScoped;
    
    private String FooBean.name = "Foos";
    
    private Foo FooBean.foo;
    
    private List<Foo> FooBean.allFoos;
    
    private boolean FooBean.dataVisible = false;
    
    private List<String> FooBean.columns;
    
    private HtmlPanelGrid FooBean.createPanelGrid;
    
    private HtmlPanelGrid FooBean.editPanelGrid;
    
    private HtmlPanelGrid FooBean.viewPanelGrid;
    
    private boolean FooBean.createDialogVisible = false;
    
    @PostConstruct
    public void FooBean.init() {
        columns = new ArrayList<String>();
    }
    
    public String FooBean.getName() {
        return name;
    }
    
    public List<String> FooBean.getColumns() {
        return columns;
    }
    
    public List<Foo> FooBean.getAllFoos() {
        return allFoos;
    }
    
    public void FooBean.setAllFoos(List<Foo> allFoos) {
        this.allFoos = allFoos;
    }
    
    public String FooBean.findAllFoos() {
        allFoos = Foo.findAllFoos();
        dataVisible = !allFoos.isEmpty();
        return null;
    }
    
    public boolean FooBean.isDataVisible() {
        return dataVisible;
    }
    
    public void FooBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid FooBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void FooBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid FooBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void FooBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid FooBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void FooBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid FooBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        return (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
    }
    
    public HtmlPanelGrid FooBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        return (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
    }
    
    public HtmlPanelGrid FooBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        return (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
    }
    
    public Foo FooBean.getFoo() {
        if (foo == null) {
            foo = new Foo();
        }
        return foo;
    }
    
    public void FooBean.setFoo(Foo foo) {
        this.foo = foo;
    }
    
    public String FooBean.onEdit() {
        return null;
    }
    
    public boolean FooBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void FooBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String FooBean.displayList() {
        createDialogVisible = false;
        findAllFoos();
        return "foo";
    }
    
    public String FooBean.displayCreateDialog() {
        foo = new Foo();
        createDialogVisible = true;
        return "foo";
    }
    
    public String FooBean.persist() {
        String message = "";
        if (foo.getId() != null) {
            foo.merge();
            message = "Successfully updated";
        } else {
            foo.persist();
            message = "Successfully created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialog.hide()");
        context.execute("editDialog.hide()");
        
        FacesMessage facesMessage = new FacesMessage(message);
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllFoos();
    }
    
    public String FooBean.delete() {
        foo.remove();
        FacesMessage facesMessage = new FacesMessage("Successfully deleted");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllFoos();
    }
    
    public void FooBean.reset() {
        foo = null;
        createDialogVisible = false;
    }
    
    public void FooBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
